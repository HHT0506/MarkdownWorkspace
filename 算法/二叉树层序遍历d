代码

```cpp
#include<iostream>
#include<vector>
#include<queue>
using namespace std;

struct TreeNode {//二叉树节点
	TreeNode *left;
	TreeNode *right;
	int val;
	TreeNode(int value = 0) :val(value), left(nullptr), right(nullptr) {};
};

//层序遍历输出
void fun(TreeNode *root)
{
	queue<TreeNode*> que;
	que.push(root);
	while (!que.empty())
	{
		int size = que.size();
		for (int i = 0; i < size; i++)
		{
			TreeNode *node = que.front();
			que.pop();

			cout << node->val << " ";
			if (node->left != nullptr)
				que.push(node->left);
			if (node->right != nullptr)
				que.push(node->right);
		}
	}
}
/*
           1
		/     \
	   2        3 
	  /  \       \
	 4    5        6

*/
int main()
{
	TreeNode *p1 = new TreeNode(1);
	TreeNode *p2 = new TreeNode(2);
	TreeNode *p3 = new TreeNode(3);
	TreeNode *p4 = new TreeNode(4);
	TreeNode *p5 = new TreeNode(5);
	TreeNode *p6 = new TreeNode(6);

	p1->left = p2;
	p1->right = p3;

	p2->left = p4;
	p2->right = p5;

	p3->right = p6;


	fun(p1);
	return 0;
}
```

